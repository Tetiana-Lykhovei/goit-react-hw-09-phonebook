{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Login/Login.module.css","components/Login/Login.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","console","error","onSubmit","ev","preventDefault","authOperations","login","autoComplete","className","s","formBox","formLabel","formSpan","type","onChange","formInput","formBtn","LoginView"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,yBAAyB,SAAW,wBAAwB,UAAY,yBAAyB,QAAU,yB,qGCI3J,SAASC,IACtB,IAAMC,EAAWC,cADa,EAEJC,mBAAS,IAFL,mBAEvBC,EAFuB,KAEhBC,EAFgB,OAGEF,mBAAS,IAHX,mBAGvBG,EAHuB,KAGbC,EAHa,KAcxBC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMjB,EAAc,EAAdA,MACtC,OAAQiB,GACN,IAAK,QACHL,EAASZ,GACT,MACF,IAAK,WACHc,EAAYd,GACZ,MACF,QACEkB,QAAQC,MAAM,WAIpB,OACE,gCACE,kDACA,uBAAMC,SAzBW,SAACC,GACpBA,EAAGC,iBAEHd,EAASe,IAAeC,MAAM,CAAEb,QAAOE,cAEvCD,EAAS,IACTE,EAAY,KAmBoBW,aAAa,MAAMC,UAAWC,IAAEC,QAA9D,UACE,wBAAOF,UAAWC,IAAEE,UAApB,UACE,sBAAMH,UAAWC,IAAEG,SAAnB,mBACA,uBACEC,KAAK,QACLd,KAAK,QACLjB,MAAOW,EACPqB,SAAUjB,EACVW,UAAWC,IAAEM,eAGjB,wBAAOP,UAAWC,IAAEE,UAApB,UACE,sBAAMH,UAAWC,IAAEG,SAAnB,sBAEA,uBACEC,KAAK,WACLd,KAAK,WACLjB,MAAOa,EACPmB,SAAUjB,EACVW,UAAWC,IAAEM,eAGjB,wBAAQF,KAAK,SAASL,UAAWC,IAAEO,QAAnC,yBCpDOC,UAFG,kBAAM,cAAC5B,EAAD","file":"static/js/4.5ade233a.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"Login_formBox__2wor_\",\"formLabel\":\"Login_formLabel__3TbwF\",\"formSpan\":\"Login_formSpan__1ZUcw\",\"formInput\":\"Login_formInput__1paRn\",\"formBtn\":\"Login_formBtn__1elnV\"};","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../../redux/auth\";\r\nimport s from \"./Login.module.css\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    dispatch(authOperations.login({ email, password }));\r\n\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        console.error(\"Ooops\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Enter your login</h1>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\" className={s.formBox}>\r\n        <label className={s.formLabel}>\r\n          <span className={s.formSpan}>Email</span>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            className={s.formInput}\r\n          />\r\n        </label>\r\n        <label className={s.formLabel}>\r\n          <span className={s.formSpan}>Password</span>\r\n\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            className={s.formInput}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.formBtn}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Login from \"../components/Login\";\r\n\r\nconst LoginView = () => <Login />;\r\n\r\nexport default LoginView;\r\n"],"sourceRoot":""}